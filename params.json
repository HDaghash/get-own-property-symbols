{"name":"Get-own-property-symbols","tagline":"ES6 Object.getOwnPropertySymbols partial polyfill","body":"get-own-property-symbols\r\n========================\r\n\r\n[![build status](https://secure.travis-ci.org/WebReflection/get-own-property-symbols.png)](http://travis-ci.org/WebReflection/get-own-property-symbols)\r\n\r\nThis is a widely compatible, Mobile friendly, and zero dependencies partial polyfill for `Object.getOwnPropertySymbols`.\r\n```js\r\nvar getOwnPropertySymbols = require('get-own-property-symbols');\r\n\r\nvar o = {};\r\nvar s = Symbol();\r\n\r\no[s] = 123;\r\n\r\nObject.getOwnPropertyNames(o);  // []\r\ngetOwnPropertySymbols(o);       // [s]\r\n\r\n// same as\r\nObject.getOwnPropertySymbols(o);// [s]\r\n```\r\n\r\n\r\nThis module brings in a global `Symbol` initializer too, together with `Symbol.for` and `Symbol.keyFor` methods.\r\n```js\r\nvar s = Symbol.for('me');\r\nSymbol.for('me') === s; // true\r\n\r\nSymbol.keyFor(s); // 'me'\r\n```\r\n\r\n#### Caveat\r\nThis partial polyfill _will not work with `null` objects_, and even if [it's possible to make it work](https://gist.github.com/WebReflection/56d04ccb1e5b0e50c121#comment-1426442) it's not worth the hassle.\r\n```js\r\nvar o = Object.create(null);\r\nvar s = Symbol();\r\n\r\no[s] = 123;\r\n\r\n// not set as Symbol, just as generic key\r\nObject.keys(o); // [s]\r\n```\r\n\r\n#### More details\r\nThere are alternatives to partially polyfill [Symbol only](https://github.com/medikoo/es6-symbol#es6-symbol) and the main difference is that whit `get-own-property-symbols` you actually have `Object.getOwnPropertySymbols` functionality and `Object.getOwnPropertyNames` will never show Symbols too.\r\n\r\nAccordingly, if you are looking for a more consistent approach with ES6 specifications, use this module, otherwise feel free to go for the `Symbol` only.\r\n\r\nI will try to check with @medikoo if we could simply merge these two approaches and have a better sham \"to rule them all\".","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}